{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["user","highscore","highscores","questions","containerStyle","width","height","center","lat","lng","Loading","props","renderTime","dimension","time","total","timeLeft","Math","floor","className","state","remove","setTimeout","setState","this","score","question","id","isPlaying","duration","colors","elapsedTime","React","Component","Leaderboard","handleClick","bind","getQuestions","scoresarray","x","push","isIn","i","length","name","displayName","writeHighScore","sort","a","b","leaderboard","leaderboardLength","Button","variant","color","size","onClick","Game","timesUp","currentlyPlaying","pos","nextQuestion","answer","position","draggable","onDragEnd","e","updatePos","updateScore","guess","tba","relative","sqrt","round","newScore","newQues","latLng","questionMsg","isBlank","properties","geometry","coordinates","mapContainerStyle","zoom","renderedMarkers","features","axios","method","url","result","data","idx","random","Home","initializeScores","firebase","database","ref","uid","set","checkHighScore","then","checkHighScores","scores","userId","dbRef","child","get","res","val","Login","firebased","firebaseui","require","apps","initializeApp","apiKey","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","ui","auth","AuthUI","start","signInOptions","EmailAuthProvider","PROVIDER_ID","fullLabel","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","currentUser","$","ReactDOM","render","document","getElementById","uiShown","style","display","signInFlow","tosUrl","privacyPolicyUrl","googleMapsApiKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.4d9d34d8.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport FadeIn from 'react-fade-in';\n\nlet user, highscore, highscores, questions;\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// const renderTime = (dimension, time, total) => {\n//   let timeLeft = total - Math.floor(time)\n//   return (\n//     <div className=\"time-wrapper\">\n//       <div className=\"time\">{timeLeft}</div>\n//       <div>{dimension}</div>\n//     </div>\n//   );\n// };\n\nconst containerStyle = {\n  width: '600px',\n  height: '400px'\n};\n\nconst center = {\n  lat: 35.85,\n  lng: -78.7\n};\n\nclass Loading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remove: false\n    };\n  }\n\n  renderTime = (dimension, time, total) => {\n    let timeLeft = total - Math.floor(time)\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{timeLeft}</div>\n      </div>\n    );\n  };\n\n  render() {\n\n    setTimeout(() => {\n      this.setState(state => ({\n        remove: true\n      }));\n    }, 5000);\n\n    if (!this.state.remove) {\n      return (\n        <div id=\"loading\">\n          <CountdownCircleTimer\n            isPlaying\n            duration={5}\n            colors={[[\"#3f51b5\"]]}\n          //colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\n          >\n            {({ elapsedTime }) =>\n              this.renderTime(\"Loading...\", elapsedTime, 5)\n            }\n          </CountdownCircleTimer>\n        </div>\n      )\n    }\n\n    else {\n      return (<Game score={0} question={1} />);\n    }\n\n  }\n}\n\nclass Leaderboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remove: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n\n    getQuestions();\n\n    this.setState(state => ({\n      remove: true\n    }));\n\n  }\n\n  render() {\n\n    let scoresarray = [];\n    //alert(JSON.stringify(highscores));\n\n    for (let x in highscores) {\n      scoresarray.push(highscores[x]);\n    }\n\n    let isIn = false;\n    for (let i = 0; i < scoresarray.length; i++) {\n      if (scoresarray[i].name === user.displayName) {\n        isIn = true;\n      }\n    }\n    if (!isIn) {\n      scoresarray.push({ name: user.displayName, highscore: this.props.score });\n      highscore = this.props.score;\n      writeHighScore(this.props.score);\n    }\n\n    for (let i = 0; i < scoresarray.length; i++) {\n      if (scoresarray[i].name === user.displayName) {\n        if (this.props.score > scoresarray[i].highscore) {\n          highscore = this.props.score;\n          writeHighScore(this.props.score);\n          scoresarray[i].highscore = this.props.score;\n        }\n      }\n    }\n\n    // if (this.props.score > highscore) {\n    //   highscore = this.props.score;\n    //   writeHighScore(this.props.score);\n    //   for (let i = 0; i < scoresarray.length; i++) {\n    //     if (scoresarray[i].name === user.displayName) {\n    //       scoresarray[i].highscore = this.props.score;\n    //     }\n    //   }\n    // }\n\n    scoresarray.sort(function (a, b) {\n      return b.highscore - a.highscore;\n    })\n\n    let leaderboard = [];\n    let leaderboardLength = scoresarray.length > 10 ? 10 : scoresarray.length;\n    for (let i = 0; i < leaderboardLength; i++) {\n      if (scoresarray[i].name === user.displayName) {\n        leaderboard.push(<p>{i + 1}. {scoresarray[i].name} (You) {scoresarray[i].highscore}</p>);\n      }\n      else {\n        leaderboard.push(<p>{i + 1}. {scoresarray[i].name} {scoresarray[i].highscore}</p>);\n      }\n\n    }\n\n    //alert(JSON.stringify(scoresarray));\n\n    if (!this.state.remove) {\n      return (\n        <div id=\"leaderboard\">\n          <FadeIn>\n            <h1>Your total score: {this.props.score}</h1>\n            <h3>Your high score: {highscore}</h3>\n            <p><u><strong><em>Where in the Triangle</em> Leaderboard</strong></u></p>\n            <div id=\"specialdiv\">{leaderboard}</div>\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.handleClick}>\n              PLAY AGAIN\n        </Button>\n          </FadeIn>\n        </div>\n      );\n    }\n    else {\n      return (\n        <Loading />\n      );\n    }\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: this.props.question,\n      score: this.props.score,\n      currentlyPlaying: true,\n      pos: center,\n      nextQuestion: false\n    };\n    //alert(questions.length);\n  }\n\n  renderedMarkers(answer) {\n    if (this.state.currentlyPlaying) {\n      return (\n        <Marker\n          position={this.state.pos}\n          draggable={true}\n          onDragEnd={(e) => { this.updatePos(e) }} />\n      );\n    }\n    else {\n      this.updateScore(this.state.pos, answer);\n      return (\n        <div>\n          <Marker\n            position={this.state.pos}\n            draggable={false} />\n          <Marker\n            position={{ lat: answer[1], lng: answer[0] }}\n            draggable={false} />\n        </div>\n      )\n    }\n  }\n\n  updateScore(guess, answer) {\n    var a = guess.lat - answer[1];\n    var b = guess.lng - answer[0];\n\n    var c = Math.sqrt(a * a + b * b);\n    var relative = ((0.3354 - c) / 0.3354)\n    let tba;\n    if (relative <= 0) {\n      tba = 0;\n    }\n    else {\n      tba = Math.round(relative * 1000)\n    }\n    const newScore = this.state.score + tba;\n    const newQues = this.state.question + 1;\n    setTimeout(\n      () => this.setState({\n        score: newScore,\n        currentlyPlaying: true,\n        question: newQues,\n        pos: center,\n        nextQuestion: true\n      }), 1000);\n  }\n\n  updatePos(e) {\n    //alert((e.latLng.lat()));\n    this.setState(state => ({\n      pos: { lat: e.latLng.lat(), lng: e.latLng.lng() }\n    }));\n  }\n\n  renderTime = (dimension, time, total) => {\n    let timeLeft = total - Math.floor(time)\n    if (timeLeft === 0) {\n      this.timesUp();\n    }\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{timeLeft}</div>\n      </div>\n    );\n  };\n\n  timesUp = () => {\n    if (this.state.currentlyPlaying) {\n      this.setState({\n        currentlyPlaying: false\n      });\n    }\n  }\n\n  render() {\n\n    let questionMsg, isBlank, answer;\n\n    if (this.state.question <= 10 && questions.length === 10) {\n      // alert(this.state.question);\n      // alert(questions);\n      questionMsg = <p>Question {this.state.question}/10 | Score: {this.state.score}</p>;\n      isBlank = \"is \" + questions[this.state.question - 1].properties.name + \" ?\";\n      answer = questions[this.state.question - 1].geometry.coordinates;\n    }\n    else {\n      questionMsg = null;\n      isBlank = null;\n      answer = null;\n    }\n\n    if (!this.state.nextQuestion) {\n      return (\n        <div id=\"game\">\n          {/* <Grid container spacing={3}> */}\n          {/* <Grid item xs={12}> */}\n          <h1 id=\"whodat\">Where in the Triangle {isBlank}</h1>\n          {/* </Grid>\n            <Grid item xs={12}> */}\n          {questionMsg}\n          {/* </Grid>\n            <Grid item xs={6}> */}\n          {/* <LoadScript\n            googleMapsApiKey=\"AIzaSyCA4Cy8aNp9G4mw0VDqb_jpuAp4Zx0f7c8\"\n          > */}\n          <GoogleMap className=\"yeet\"\n            mapContainerStyle={containerStyle}\n            center={center}\n            zoom={9}\n          >\n            {this.renderedMarkers(answer)}\n            {/* <Marker2 currentlyPlaying={this.state.currentlyPlaying} answer={answer} /> */}\n            { /* Child components, such as markers, info windows, etc. */}\n            <></>\n          </GoogleMap>\n          {/* </LoadScript> */}\n          {/* </Grid>\n            <Grid item xs={6}> */}\n          <div className=\"gametimer\">\n            <CountdownCircleTimer\n              isPlaying\n              duration={10}\n              colors={[[\"#3f51b5\"]]}\n            //colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\n            >\n              {({ elapsedTime }) =>\n                this.renderTime(\"seconds\", elapsedTime, 10)\n              }\n            </CountdownCircleTimer>\n          </div>\n          {/* </Grid> */}\n          {/*  <script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCA4Cy8aNp9G4mw0VDqb_jpuAp4Zx0f7c8\"\n          async></script> */ }\n          {/* </Grid> */}\n        </div>\n      );\n    }\n    else {\n      if (this.state.question === 11) {\n        return (<Leaderboard score={this.state.score} />);\n      }\n      else {\n        return (\n          <Game question={this.state.question} score={this.state.score} />\n        );\n      }\n    }\n  }\n}\n\nasync function getQuestions() {\n  questions = [];\n\n  //alert(\"hey\");\n  for (let i = 0; i < 10; i++) {\n\n    const url = '//api.opentripmap.com/0.1/en/places/bbox?lon_min=-79&lat_min=35.7&lon_max=-78.4&lat_max=36&format=geojson&apikey=5ae2e3f221c38a28845f05b6deb6509bf9aeb18ce2d3929402dc4f14';\n    //alert(url);\n    let features;\n    const result = await axios({\n      method: 'get',\n      url: url,\n    })\n    //alert(JSON.stringify(result));\n    features = result.data.features;\n    //alert(JSON.stringify(features));\n    const idx = Math.floor(Math.random() * features.length);\n    if (features[idx].properties.name !== \"\") {\n      questions.push(features[idx]);\n    }\n\n  }\n\n  //alert(JSON.stringify(questions));\n  // alert(questions.length);\n}\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      remove: false,\n      highscore: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n\n    getQuestions();\n\n    this.setState(state => ({\n      remove: true\n    }));\n\n  }\n\n  // componentDidMount() {\n  //   checkHighScore().then(score => highscore = score).then(() => this.setState({remove: false, highscore: highscore}));\n  // }\n\n  render() {\n\n    if (!this.state.remove) {\n      return (\n        <div className=\"welcome\">\n          <FadeIn>\n            {/* <Grid container spacing={3}>\n            <Grid item xs={12}> */}\n            <h1 className><em>Where in the Triangle</em>, a game of (mostly) luck.</h1>\n            {/* </Grid>\n            <Grid item xs={12}> */}\n            <p>Welcome to <em>Where in the Triangle</em>, <strong>{user.displayName}</strong>. Your High Score: <strong>{highscore}</strong> </p>\n            <p>You will have 10 seconds to drag the marker where you think (or guess) each place is. </p>\n            <p>There will be 10 questions, each worth up to 1000 points depending on how close you are.</p>\n            <p id=\"specialp\">Click PLAY to get started!</p>\n            {/* </Grid>\n            <Grid item xs={12}> */}\n            {/* </Grid>\n            <Grid item xs={12}> */}\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.handleClick}>\n              PLAY\n              </Button>\n          </FadeIn>\n          {/* </Grid>\n          </Grid> */}\n        </div>\n      );\n    }\n    else {\n      initializeScores();\n      return (\n        <Loading />\n      );\n    }\n  }\n}\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      firebased: false\n    }\n  }\n\n  render() {\n\n    if (!this.state.firebased) {\n      this.setState(state => ({\n        firebased: true\n      }));\n      // alert(this.state.firebased);\n      // this.state.firebased = true;\n\n      var firebaseui = require('firebaseui');\n\n      const firebaseConfig = {\n        apiKey: \"AIzaSyBkN4X5xTXBGlIzB5RJ3BTwvw-3fF2UvAQ\",\n        authDomain: \"trivia-cb134.firebaseapp.com\",\n        projectId: \"trivia-cb134\",\n        databaseURL: \"https://trivia-cb134-default-rtdb.firebaseio.com/\",\n        storageBucket: \"trivia-cb134.appspot.com\",\n        messagingSenderId: \"701740834760\",\n        appId: \"1:701740834760:web:483eef67b7474c5759eafd\"\n      };\n\n      if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n      }\n\n      var ui = new firebaseui.auth.AuthUI(firebase.auth());\n\n      ui.start('#firebaseui-auth-container', {\n        signInOptions: [\n          firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        ],\n        fullLabel: 'Login with your email'\n        // Other config options...\n      });\n\n      var uiConfig = {\n        callbacks: {\n          signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n            // User successfully signed in.\n            // Return type determines whether we continue the redirect automatically\n            // or whether we leave that to developer to handle.\n            //alert(\"man\");\n            // const myNode = document.getElementById(\"root\");\n            // myNode.innerHTML = '';\n            user = firebase.auth().currentUser;\n            initializeScores();\n            // checkHighScore().then(score => highscore = score);\n            // checkHighScores().then(scores => highscores = scores);\n            //alert(JSON.stringify(highscores));\n            $('#hey').remove();\n            $('#about').remove();\n            setTimeout(() => { ReactDOM.render(<Home />, document.getElementById('root2')); }, 500);\n            //ReactDOM.render(<Home />, document.getElementById('root'));\n            return false;\n          },\n          uiShown: function () {\n            // The widget is rendered.\n            // Hide the loader.\n            document.getElementById('loader').style.display = 'none';\n          }\n        },\n        // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n        signInFlow: 'popup',\n        //signInSuccessUrl: '<url-to-redirect-to-on-success>',\n        signInOptions: [\n          // Leave the lines as is for the providers you want to offer your users.\n          firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        ],\n        // Terms of service url.\n        tosUrl: '<your-tos-url>',\n        // Privacy policy url.\n        privacyPolicyUrl: '<your-privacy-policy-url>'\n      };\n\n      ui.start('#firebaseui-auth-container', uiConfig);\n\n      //database = firebase.database();\n    }\n    return (\n      <div id=\"welcomepage\">\n        <LoadScript\n          googleMapsApiKey=\"AIzaSyCA4Cy8aNp9G4mw0VDqb_jpuAp4Zx0f7c8\"\n        >\n          <div id=\"root2\">\n            <h1 id=\"hey\">Welcome to <em>Where in the Triangle</em></h1>\n            <div id=\"firebaseui-auth-container\"></div>\n            <div id=\"loader\">Loading...</div>\n            <p id=\"about\">About: This game was created using React, Firebase, and the Google Maps (to load the maps) and OpenTripMap (to generate the random places) APIs.</p>\n\n          </div>\n        </LoadScript>\n      </div>\n    );\n  }\n}\n\n\nfunction writeHighScore(highscore) {\n  firebase.database().ref('users/' + user.uid).set({\n    highscore: highscore,\n    name: user.displayName\n  });\n}\n\nfunction initializeScores() {\n  checkHighScore().then(score => highscore = score);\n  checkHighScores().then(scores => highscores = scores);\n}\n\nasync function checkHighScore() {\n  var userId = user.uid;\n  const dbRef = firebase.database().ref();\n  let res = await dbRef.child(\"users\").child(userId).child(\"highscore\").get();\n  return res.val();\n\n}\n\nasync function checkHighScores() {\n  const dbRef = firebase.database().ref();\n  let res = await dbRef.child(\"users\").get();\n  return res.val();\n\n}\n\nexport default Login;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}